Given two words word1 and word2, find the minimum number of operations required to convert word1 to word2.

You have the following 3 operations permitted on a word:

Insert a character
Delete a character
Replace a character
Example 1:

Input: word1 = "horse", word2 = "ros"
Output: 3
Explanation: 
horse -> rorse (replace 'h' with 'r')
rorse -> rose (remove 'r')
rose -> ros (remove 'e')


CODE:

class Solution:
    def minDistance(self, word1: str, word2: str) -> int:
        res=[[0 for j in range(len(word2)+1)] for i in range(len(word1)+1)]
        for i in range(len(word1)+1):
            for j in range(len(word2)+1):
                if i==0:
                    res[i][j]=j
                elif j==0:
                    res[i][j]=i
                elif word1[i-1]==word2[j-1]:
                    res[i][j]=res[i-1][j-1]
                else:
                    res[i][j]=1+min(res[i-1][j-1],res[i-1][j],res[i][j-1])
        return res[len(word1)][len(word2)]
        
        
       #techdose video

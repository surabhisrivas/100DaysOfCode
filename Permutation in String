Given two strings s1 and s2, write a function to return true if s2 contains the permutation of s1. In other words, one of the first string's permutations is the substring of the second string.

 

Example 1:

Input: s1 = "ab" s2 = "eidbaooo"
Output: True
Explanation: s2 contains one permutation of s1 ("ba").
Example 2:

Input:s1= "ab" s2 = "eidboaoo"
Output: False
 

Note:

The input strings only contain lower case letters.
The length of both given strings is in range [1, 10,000].

CODE:

from collections import Counter
class Solution:
    def checkInclusion(self, s1: str, s2: str) -> bool:
        pcount=Counter(s1)
        scount=Counter()
        for i in range(len(s2)):
            scount[s2[i]]+=1
            if(i>=len(s1)):
                if(scount[s2[i-len(s1)]]==1):
                    del scount[s2[i-len(s1)]]
                else:
                    scount[s2[i-len(s1)]]-=1
            if(pcount==scount):
                return True
        return False
        

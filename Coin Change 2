You are given coins of different denominations and a total amount of money. Write a function to compute the number of combinations that make up that amount. You may assume that you have infinite number of each kind of coin.

 

Example 1:

Input: amount = 5, coins = [1, 2, 5]
Output: 4
Explanation: there are four ways to make up the amount:
5=5
5=2+2+1
5=2+1+1+1
5=1+1+1+1+1
Example 2:

Input: amount = 3, coins = [2]
Output: 0
Explanation: the amount of 3 cannot be made up just with coins of 2.


CODE:

class Solution:
    def change(self, sm: int, coins: List[int]) -> int:
        if sm==0:
            return 1
        if not coins:
            return 0
        coins.sort()
        n=len(coins)
        dp=[[0 for j in range(sm+1)] for i in range(n)]
        for i in range(n):
            dp[i][0]=1
        for i in range(1,sm+1):
            if i%coins[0]==0:
                dp[0][i]=1
            else:
                dp[0][i]=0
        for i in range(1,n):
            for j in range(1,sm+1):
                if coins[i]>j:
                    dp[i][j]=dp[i-1][j]
                else:
                    dp[i][j]=dp[i-1][j]+dp[i][j-coins[i]]
        return dp[n-1][sm]
        
